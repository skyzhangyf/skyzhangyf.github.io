<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>应用管理 on Rainbond文档中心(5.1版)</title>
    <link>http://skyzhangyf.github.io/user-manual/app-manage/</link>
    <description>Recent content in 应用管理 on Rainbond文档中心(5.1版)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    
	<atom:link href="http://skyzhangyf.github.io/user-manual/app-manage/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>基础操作</title>
      <link>http://skyzhangyf.github.io/user-manual/app-manage/operation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://skyzhangyf.github.io/user-manual/app-manage/operation/</guid>
      <description> 支持的基础操作    操作类型 条件 说明     启动 当前应用下服务处于关闭状态 启动当前应用的内置服务   停止 当前应用全部处于运行中状态 关闭当前应用的所有服务   构建 - 为应用下的所有服务构建新版本并升级    应用级的基础操作与服务的批量操作有如下区别：
   对比项 服务批量操作 应用基础操作     启动控制 批量无序启动 根据依赖关系顺序启动   操作目标 用户指定的服务 应用下的所有服务   支持的操作类型 关闭、重启、启动、移动、删除 构建、启动、停止    应用的其他操作  备份、恢复与迁移 详细文档 发布到应用市场 详细文档 添加服务组件 详细文档  </description>
    </item>
    
    <item>
      <title>添加服务组件</title>
      <link>http://skyzhangyf.github.io/user-manual/app-manage/add-service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://skyzhangyf.github.io/user-manual/app-manage/add-service/</guid>
      <description>添加服务组件说明 应用由一个或多个服务组件组成，一般在创建第一个服务组件的过程中创建了应用。后续的应用组装过程中，直接为应用添加组件将是最便捷的途径。添加服务组件分为两类：
 添加内置服务  添加服务的流程与服务创建流程完全一致，同样支持基于源代码、Docker镜像和云市应用三种途径。唯一的不同是不提供基于DockerCompose创建多个服务的方式。
 添加第三方服务  添加第三方服务 便捷的添加运行于集群外的服务，同样支持添加静态服务和动态服务。

流程演示
处理依赖关系 添加的服务一般需要被其他服务依赖或依赖其他服务，只需要进入拓扑图的编辑模式 ，将服务直接单向连线即可快捷建立依赖关系。
关于为什么需要建立依赖关系，查看文档 服务依赖关系
开启外网访问 如果添加的服务需要被外网访问，添加成功后有两种方式，第一种是通过 拓扑图的编辑模式将外网云朵模型与服务建立连线即可。第二种是通过应用网关 访问策略管理 添加访问策略。</description>
    </item>
    
    <item>
      <title>应用分享与发布</title>
      <link>http://skyzhangyf.github.io/user-manual/app-manage/share-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://skyzhangyf.github.io/user-manual/app-manage/share-app/</guid>
      <description>应用分享 应用市场定义了支持大型分布式的数字化业务系统的标准云原生应用模型、它可以包含1-N个服务组件，模型包含其中每个服务组件资源及配置，插件资源及配置，拓扑关系、部署关系等。精心制作完成即可一键发布、一键安装。 在Rainbond中，服务是Rainbond可管理的最小服务单元，用户可以将多个服务组成一个复杂的业务系统，这套业务系统可以对外提供服务，也可以分享给其他组织独立部署，你可以将整套业务系统打包成一个云市应用，并选择将该应用发布到团队、公司、好雨公有云市。分享后的应用可供团队、公司或云市的用户一键安装部署完整的服务体系，实现标准化得一键交付部署。分享到不同的范围，可见性也有所不同，具体可见范围如下：
 团队：只有当前团队下的成员可见 公司：当前企业下的所有成员可见 好雨云市：连接好雨公有云市的所有企业及用户可见  我们将一个应用内完整的业务解决方案集成体整体打包成一个云市应用，发布成功后，其他用户在创建应用时可以选择从应用市场安装的方式一键安装部署完整的服务体系，实现标准化得一键交付部署。
需要注意的是，Rainbond内置应用市场跨数据中心应用安装和交付属于企业版功能，开源版本不支持。  应用发布流程 选择要分享的应用，点击发布到市场。
 提示：发布应用时，应用内所有服务的状态必须为运行中
 完善应用信息
 填写应用基本信息
  应用名：要发布的应用名称 版本：应用发布版本 ，当同一应用组多次发布时，如果版本号相同，则会覆盖已发布的该版本应用，如果版本不同，将发布为新的版本。 分享范围：发布的可见范围。 应用说明：应用的描述，便于使用者了解应用的作用。 图标：应用LOGO   填写每个服务的配置信息
  环境变量：编辑该服务默认的环境变量，勾选可修改，则其他用户安装此应用后可编辑这个环境的值，反之不可编辑。 伸缩规则：定义该服务可伸缩的最大最小节点数，及节点伸缩步长，最小安装内存限制。 连接信息：通常连接信息中会出现密码类的信息，Rainbond提供了自动生成此类变量的值的功能可选。  提交发布任务
完善应用信息后，点击提交，向数据中心发起同步任务。由数据中心的rbd-chaos组件对应用中的每一个服务进行数据同步。如果是发布到好雨公有云市，数据中心会将应用所需的镜像或源码包同步到好雨公有仓库及FTP服务器存储，并将应用的模版数据保存到Console数据库并发送到好雨云市保存。如果是发布到团队或公司，则应用所需的镜像或源码包同步到本数据中心，并将应用的模版数据保存在Console数据库。
确认发布
当应用中的所有服务及插件全部完成同步后，点击确认发布，即可完成应用发布。发布成功后可在创建应用下的从应用市场安装中对应的范围下看到你发布的应用。
上架应用
如果想要可以在公有云市中找到发布的应用，那么需要在云市中上架该应用。上架后的应用可以被连接好雨公有云市的所有企业及用户看到。
 登录Goodrain官网,进入 企业中心 &amp;gt; 应用市场 &amp;gt; 自有市场 &amp;gt; 分享应用管理。 &amp;gt; 登录的时候需要用该企业管理员的Rainbond账号登陆。
 信息编辑。使用Markdown编写应用的详细介绍，完善应用README，让用户可以更好地去了解使用应用。
   设置价格。   上架。  完成上架之后，我们就可以在云端中找到你上架的应用。</description>
    </item>
    
    <item>
      <title>应用升级</title>
      <link>http://skyzhangyf.github.io/user-manual/app-manage/upgrade_app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://skyzhangyf.github.io/user-manual/app-manage/upgrade_app/</guid>
      <description>应用升级 应用升级功能是应用市场在易用性方面的一次全面提升, 通过简单的操作即可把从应用市场安装的应用, 从旧版本升级到新版本.
升级的对象是什么
在应用管理菜单下, 有多个我们创建的应用, 我们把它这些应用叫做应用组, 每组应用有多个服务.
我们在往应用组中添加组件时, 可以直接从应用市场安装一个打包好的云市应用, 每个应用组可以安装多个云市应用, 所以应用组下的这些服务是来自不同的云市应用.
我们查找了这些服务的安装来源, 找出了这个组安装好的所有云市应用, 针对每个云市应用做升级操作.
什么时候可以升级
当云市应用中的服务有变化 (例如：端口、环境变量、存储等) 或 新版本增加了新的服务组件时, 我们会在云市应用升级按钮的左侧, 给您用绿点提示.
应用升级流程 选择要升级的应用，点击云市场应用升级。
查看来自应用市场的应用
 选择有新版本的应用进行升级
 查看升级信息
 如果有多个可升级版本, 可按需选择期望升级到的版本.
当然也可根据意愿, 按需选择期望升级的服务.
 升级信息主要包括, 每个服务的变更信息, 以及新增服务的信息.
在上图中 🔼 标志代表服务是可升级的, ➕标志代表服务是新增的. 没有标志代表该服务没有变化, 无需升级.
点击升级
升级时, 我们对升级之前的服务状态做一个备份, 升级完成之后提供回滚功能
升级完成
 现在升级已经完成了, 让我们看看升级前后的对比
 回滚
 当然有升级就有回滚
不过有点小小的限制:
 为了保证回滚的可靠性, 现在只允许对最后一次的升级操作进行回滚 新增的服务是不能通过回滚删除的   查看升级记录
查看升级记录详情
 这里记录了之前升级
  我们可以从这里回滚升级(只能是最后一次升级哦)</description>
    </item>
    
    <item>
      <title>应用备份管理</title>
      <link>http://skyzhangyf.github.io/user-manual/app-manage/app-backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://skyzhangyf.github.io/user-manual/app-manage/app-backup/</guid>
      <description> 应用备份、恢复与迁移 Rainbond目前提供应用级的全量备份功能，主要用于两类场景：
 应用整体的版本备份，包含代码和运行环境，持久化数据，服务&amp;amp;应用配置等所有属性。有了备份，应用即可随时恢复到备份版本。 应用迁移，将应用完整迁移到其他团队或其他数据中心。  Rainbond备份功能目前的设计是全量的冷备份机制，传统意义上我们对服务的备份主要是对持久化数据的备份，比如Mysql数据库的数据。在微服务架构的状态下，如果只是备份某一个服务的数据，应用内包含多个服务时很难在出现故障的情况下同步恢复到历史状态。我们对于应用管理的追求必须要做到应用级的完整备份。在容器化的情况下，对于代码和运行环境的备份是容易的，我们可以方便的做到对所有服务的运行环境热备份。但是对于持久化数据，特别是有状态服务的持久化数据，我们不能保证在工作状态下将数据能够安全备份。因此Rainbond目前要求备份应用时需要停止有状态服务。
后续的版本中我们将以operator的方式支持有状态服务的数据热备份，然后接入应用整体备份流程中。即可实现对应用的完整热备份和定期备份。
应用备份 从应用的操作列表中即可进入应用备份管理页面，备份操作分为本地备份和云端备份两种。
 本地备份：将一组应用备份在本地，本地备份的应用无法进行跨数据中心和租户的迁移操作。 云端备份：Rainbond企业版本支持，将备份数据存储于云端。  只需要添加备份，选择备份模式即可，备份是一个异步的过程，且根据服务的数量的不同耗时不同。如果应用下存在运行中的有状态服务，将拒绝备份操作。
在5.0以后的版本中新添加全部备份页面，进入后会展示出当前团队数据中心下的所有备份记录，以便清晰查看，同时也解决了之前版本应用有备份记录无法删除的问题。
备份恢复 恢复对于已经备份成功的一组应用，使用恢复可以将该组应用进行恢复操作。恢复通常是在当前应用出现不可解决的问题。 恢复操作如下：  恢复操作过程中请勿关闭恢复页面，否则可能会导致恢复失败。为了保证您的数据安全，恢复操作过程我们会生成一份您的备份应用的拷贝，您可以在恢复的最后一步中选择删除原有的应用。
  导出备份 导出备份会将会导出一份备份的数据，目前只有云端备份支持备份的导出。
 导入备份 在导出备份以后，您可以在别的云帮平台（可以访问网络）将导出的备份进行导入，导入后会生成相应的备份记录，您可继续后续操作。
  本地恢复后的注意事项 应用恢复后网关访问策略需要用户手工配置。
应用的跨租户和跨数据中心迁移 由于我们做到全局的全量备份，借助此我们可以做到应用的整体迁移，包括跨租户迁移和跨数据中心迁移。
在已经备份的情况下，可以选择迁移操作来进行应用的迁移 迁移操作如下：
应用完成迁移以后，会跳转到对应的数据中心和租户以方便您查看迁移后的应用。
Rainbond开源版只能进行当前数据中心下的跨团队迁移，企业版支持跨数据中心迁移。  </description>
    </item>
    
    <item>
      <title>应用拓扑图</title>
      <link>http://skyzhangyf.github.io/user-manual/app-manage/app-topology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://skyzhangyf.github.io/user-manual/app-manage/app-topology/</guid>
      <description>展示模式 拓扑图以图形化的方式展示应用的所有服务组件实时状态，它将展示如下几个维度的信息：
 服务网络拓扑关系  图中可以清楚的展示服务直接的网络调用关系以及公网开放情况，结合流量状态可以便捷发现通信状态。
 服务整体业务依赖关系  图中服务之间的连线表示服务业务依赖关系，让用户可以一看便知复杂业务系统的业务关系。
 服务流量跟踪状态  拓扑图中的每条线在开通了性能分析插件后将实时呈现每条通信链路的吞吐率和响应时间，未来还会将错误率和分布式跟踪情况展现在链路中
 服务运行状态  服务以颜色展示服务状态，对应关系如下：
   颜色 未构建/未启动     黑色/灰色 未构建/未启动   绿色 运行中   浅绿色 升级中   红色 已关闭     如果服务六方体呈现为叠加状，表明当前服务运行了多个实例。
 编辑模式 编辑拓扑图目前支持:服务组件连接建立或取消依赖关系、打开或关闭服务组件对外端口，方便快捷；
 删除动作  点击连接线按下delete键快速删除组件依赖关系、关闭服务组件所有对外端口，方便快捷；
 增加动作  点击起点焦点拖拽到终点即可建立两个服务间的依赖关系或打开外网访问。</description>
    </item>
    
  </channel>
</rss>