<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>应用市场 on Rainbond文档中心(5.1版)</title>
    <link>http://skyzhangyf.github.io/user-manual/app-store/</link>
    <description>Recent content in 应用市场 on Rainbond文档中心(5.1版)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    
	<atom:link href="http://skyzhangyf.github.io/user-manual/app-store/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>应用市场定义</title>
      <link>http://skyzhangyf.github.io/user-manual/app-store/app-market-define/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://skyzhangyf.github.io/user-manual/app-store/app-market-define/</guid>
      <description>本文阐述应用市场的概念，并教你如何从Rainbond公共应用市场同步应用与插件。
什么是应用市场 应用市场是Rainbond定义的一种对于Rainbond应用的存储、共享、交付、管理途径。 Rainbond应用市场与传统意义上的镜像仓库不同之处在于，它基于镜像仓库、包仓库和对象存储等存储系统支持，定义了支持大型、分布式数字化业务系统的标准云原生应用模型，并针对应用模型提供创建、发布、存储、交付、安装、升级等一系列业务支持，对内可作为以便捷灵活的方式共享企业创造的业务系统、中间件的业务性管理平台，对外可作为根据行业特性构建行业话交付标准、交付流程和交付路径的基础，应用市场的最大优点在于它涵盖的不仅是服务组件和应用（业务系统），甚至于解决方案都可以支持一键分享、一键安装使用，极大的便利用户，只需安装使用，覆盖几乎所有的用户，而不仅仅是技术性人员。
基于Rainbond提供的通过源码、镜像等多种途径创建1-N个服务组件构成业务系统，一键即可构建应用模型并发布到应用市场中，根据不同场景需求和可见级别服务于不同的业务场景。
应用市场应用同步 应用市场中的业务系统可以通过离线导出的方式，交付到一个离线的Rainbond平台，也可以通过公有云市场的方式在线交付社区用户或目标企业用户。 使用者通过应用市场即可一键安装部署完整业务系统，并且能够持续进行升级。 应用在线同步方式请参考文档 应用市场应用同步
应用版本 应用市场中的应用支持多个版本共存，应用的操作粒度支持到版本级别。</description>
    </item>
    
    <item>
      <title>应用市场应用同步</title>
      <link>http://skyzhangyf.github.io/user-manual/app-store/app-market-synchronous/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://skyzhangyf.github.io/user-manual/app-store/app-market-synchronous/</guid>
      <description>应用市场同步 私有应用市场内置于Rainbond平台中，公有应用市场目前由好雨科技运营提供。公有云市场服务于与其对接互联的私有应用市场，提供跨平台，跨云的应用资源同步和升级。
企业也可以建立行业公有应用市场，详情参阅 好雨企业服务
与公有云市场互联
市场间应用同步
应用更新 已同步的应用若远端市场存在更新的版本，本地市场即可从远端获取最新的版本应用。当本地市场的应用有更新的版本，安装的服务可进行构建升级操作。</description>
    </item>
    
    <item>
      <title>基于应用市场的应用交付</title>
      <link>http://skyzhangyf.github.io/user-manual/app-store/share-app-market/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://skyzhangyf.github.io/user-manual/app-store/share-app-market/</guid>
      <description>应用制作与分享 参考文档 应用管理，分享管理
应用安装 应用下载同步是在互联网环境下的一种跨平台应用交付方式，通过此方式可以快速获取优秀的、成熟的通用解决方案，例如Mysql、TiDB等数据库方案，Gitlab、Jenkins等IT工具。也可以通过此方式交付商业业务系统给你的用户。当前Rainbond默认提供了与好雨云市的互联用例。
在Rainbond控制台中点击左侧导航栏进入内部市场，根据你的需求选择应用或插件，点击云端同步即可看到在好雨公有云市发布的应用。应用名称后有(官方发布)字样是我们好雨官方发布或推荐的应用。点击应用名称可查看应用的详细介绍。
选择要下载的应用或插件点击后方的下载将好雨公有云市应用或插件下载到你的内部市场中。下载完成后，方可在方可在 从应用市场安装直接一键安装本应用。如果是插件可在左侧导航栏我的插件中安装管理你的插件。
 点击内部市场应用后方的云端更新，可将好雨云市中该应用的最新版本下载更新到你的内部市场。
 应用交付 使用好雨公有云市在线交付 对于有在线环境的用户，可以直接使用好雨公有云市进行业务交付，将业务系统发布到好雨公有云市，用户可在公有云市直接下载一件安装整套业务系统。 应用发布请参考 应用管理，分享管理
应用安装参考 服务创建
使用导入导出离线交付 考虑到离线环境的应用交付，我们RainBond设计实现了应用到离线导入和导出功能。复杂的业务系统可以借助网络或离线应用包快速的在不同的环境中交付，安装速度和易用性远远超出传统的交付。除了标准Rainbond应用模型以外，同时还支持导出docker-compose模型脱离Rainbond平台便捷交付。
应用导出 为了让用户能够更好的管理自己的应用，快捷简单交付业务，我们为平台设计了应用导入导出功能，该功能允许用户通过简单的几次点击，就可以将内部市场的应用打包为一个压缩文件，并可以下载到本地。在导出的时候，支持两种格式，一种为rainbond-app格式，另一种为docker-compose格式。
 云市同步的应用不支持导出compose文件，只支持导出rainbond-app格式。
  格式说明   rainbond-app：为了在多个云帮之间迁移应用而设计，即在A平台导出后，可以导入到B平台，但导出后的文件不能直接运行，导出的文件是一个zip格式的压缩包，其中包含了该应用的描述信息、每个组件的镜像或源码包等。
 docker-compose：为了快速交付而设计，当我们把云帮上的应用交付给用户时，就需要让应用具备脱离平台可运行的能力，这样才能避免为了使用一个应用而不得不先部署平台的问题，docker-compose导出格式可以在安装有docker和docker-compose的环境中运行，假设我们现在导出了一个docker-compose文件且名为web.tar，那么执行以下命令运行它：
tar -xf web.tar ./web/run.sh   ​ 使用这种可运行的格式有以下需要注意的事项：
 依赖环境：应用的运行需要依赖docker和docker-compose，如果您的系统中没有安装它们，run.sh脚本将会自动为您安装，所以请保证您的系统能够连接互连网，否则请手动安装这两个工具。
 端口是否可用，假如我们导出了一个WEB应用，如果它在启动时需要监听80端口，则物理机上的80端口必须是空闲状态，否则会因为端口冲突而导致应用启动失败。
   点击导出后，导出状态会显示为导出中   完成导出后，点击下载即可将文件下载到本地，导出的文件存放在数据中心下的/grdata/app/rainbond-app或/grdata/app/docker-compose下  应用批量导出 云帮导出的应用包文件会很大，如果网络不好的情况下，我们建议您直接在对应的数据中心的服务器上进行操作。
每个应用在打包完成后，都会存储在某个数据中心的/grdata/app目录中，利用这一点，我们可以批量导出平台中的应用。
 登录云帮，并进入“内部市场”页面。
 找到想要导出的应用，并依次点击它们的导出按钮，等待平台打包完成即可。
 等待平台打包完成后，登录到数据中心对应的服务器，假设我们要把所有导出的应用包复制到/mnt/sdc1/目录中，执行以下命令：
 find /grdata/app -maxdepth 2 -name &#39;*.zip&#39; | xargs -I FF cp FF /mnt/sdc1/   应用导入 应用导入任务发起后，由数据中心的rbd-chaos组件将用户上传的RainbondAPP文件解压，保存定义的元数据及镜像或slug包，用于安装构建应用时使用。 对于导出的应用，您也可以通过离线导入应用功能将应用导入到内部市场。在Rainbod左侧导航栏进入内部市场，点击离线导入应用，上传你的RainbondAPP文件开始导入。</description>
    </item>
    
    <item>
      <title>Rainbond应用市场应用制作规范</title>
      <link>http://skyzhangyf.github.io/user-manual/app-store/app-specification/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://skyzhangyf.github.io/user-manual/app-store/app-specification/</guid>
      <description>本文档持续完善中&amp;hellip;
 规范目的 此规范的制定为了指导用户如何制作Rainbond应用市场SaaS化交付应用。
规范要求  支持一键安装  一键安装是指可以通过应用市场一键实现自动化安装完整的业务系统，要具备此能力需要做到：
 完整的业务系统支持自动的持久化数据初始化和升级的能力。 基于环境变量对服务进行最优化配置。
 容错能力强
  容错能力强是指在云环境下，业务系统中的所有组件可以具备一定的混沌容错性，特别是以下几点：
 服务启动时对其他服务的依赖通信做一定的重试。 服务不能出现死锁状态，比如由于与其他服务通信出现一次错误导致服务卡死。
 多用户交付
  应用可以多次安装部署。
关键因素 数据初始化 数据初始化一般主要是数据库数据初始化和静态数据初始化，推荐的处理方式如下：
 数据库数据初始化  在微服务场景中，如果每个服务都有自己的数据库服务，那么可以直接将数据库比如Mysql作为服务进行代码化维护，将其对应的服务SQL初始化代码和升级代码进行持续升级。
第二种是服务自身维护SQL，每次启动后根据版本特性来执行SQL。这类方式一般进行*只增不减*的升级方式。
 静态数据初始化  这类主要是网站类服务需要持久化某些目录，但是目录下已包含一些初始化数据。操作方式是先将初始化数据至于其他目录中，服务启动后判断持久化目录是否包含数据，若未包含，则将初始化数据同步进去以实现初始化。
服务配置 应用进行SaaS化标准交付时，自定义的配置部分建议完全环境变量化，以环境变量的方式定义不同的参数类型。特别是服务之间的连接信息，务必完全根据Rainbond的规范环境变量化，以确保每次安装数据变化后工作正常。</description>
    </item>
    
  </channel>
</rss>